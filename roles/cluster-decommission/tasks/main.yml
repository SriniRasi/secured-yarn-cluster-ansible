---
    - name: Delete instances for master
      os_server:
        name: "{{ masterNamePrefix }}{{ item.0 }}.{{ domain_name }}"
        state: "{{ state }}"
        wait: yes
        cacert: "{{ cacert }}"
        api_timeout: 60
      with_together:
        - "{{ noOfMaster }}"
        - "{{ av_z_master }}"
      register: "os_hosts_master"
      async: "{{ async_time }}"
      poll: "{{ poll_insecs }}"

    - name: Delete instances for data
      os_server:
        name: "{{ dataNamePrefix }}{{ item.0 }}.{{ domain_name }}"
        state: "{{ state }}"
        wait: yes
        cacert: "{{ cacert }}"
        api_timeout: 60
      with_together:
        - "{{ noOfData }}"
        - "{{ av_z_data }}"
      register: "os_hosts_data"
      async: "{{ async_time }}"
      poll: "{{ poll_insecs }}"

    - name: Delete instances for zookeeper
      os_server:
        name: "{{ zookeeperNamePrefix }}{{ item.0 }}.{{ domain_name }}"
        state: "{{ state }}"
        cacert: "{{ cacert }}"
        wait: yes
        api_timeout: 60
      with_together:
        - "{{ noOfZookeeper }}"
        - "{{ av_z_zookeeper }}"
      register: "os_hosts_zookeeper"
      async: "{{ async_time }}"
      poll: "{{ poll_insecs }}"

    - name: Delete instances for livy
      os_server:
        name: "{{ livyNamePrefix }}{{ item.0 }}.{{ domain_name }}"
        state: "{{ state }}"
        cacert: "{{ cacert }}"
        wait: yes
        api_timeout: 60
      with_together:
        - "{{ noOfLivy }}"
        - "{{ av_z_livy }}"
      register: "os_hosts_livy"
      async: "{{ async_time }}"
      poll: "{{ poll_insecs }}"

    - name: Wait for zookeeper instance deletion to complete
      async_status: jid={{ item.ansible_job_id }}
      register: os_jobs_zookeeper
      until: os_jobs_zookeeper.finished
      retries: "{{ no_retries }}"
      with_items:
          - "{{ os_hosts_zookeeper.results }}"


    - name: Wait for Master instance deletion to complete
      async_status: jid={{ item.ansible_job_id }}
      register: os_jobs_master
      until: os_jobs_master.finished
      retries: "{{ no_retries }}"
      with_items:
          - "{{ os_hosts_master.results }}"


    - name: Wait for Data instance deletion to complete
      async_status: jid={{ item.ansible_job_id }}
      register: os_jobs_data
      until: os_jobs_data.finished
      retries: "{{ no_retries }}"
      with_items:
          - "{{ os_hosts_data.results }}"


    - name: Wait for Livy instance deletion to complete
      async_status: jid={{ item.ansible_job_id }}
      register: os_jobs_livy
      until: os_jobs_livy.finished
      retries: "{{ no_retries }}"
      with_items:
          - "{{ os_hosts_livy.results }}"
